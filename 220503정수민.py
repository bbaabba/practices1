# -*- coding: utf-8 -*-
"""220503정수민.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10Y3O2jJKTsflo2BTaRcww4YkeKWsgDVG
"""

#숫자입력
def writenum(_files) :
  import random

  if _files == '' :
    quit()
  else :
    with open(_files + '.csv','w+',encoding='utf-8-sig') as f :
      x = int(input("몇 열의 숫자를 입력하실건가요? 양의 정수를 입력해주세요(0을 입력하면 디폴트값으로 5의 숫자가 정해집니다)"))
      y = int(input("몇 행의 숫자를 입력하실건가요? 양의 정수를 입력해주세요(0을 입력하면 디폴트값으로 5의 숫자가 정해집니다)"))
      p = input("발생 숫자의 최솟값을 입력해주세요(미입력시 1이 설정됩니다)")
      q = input("발생 숫자의 최대값을 입력해주세요(미입력시 10이 설정됩니다)")
      if x == 0 :
        x = 5
      if y == 0 :
        y = 5
      if p == '' :
        p=1
      if q == '' :
        q=10
      for i in range(y+1) :
        for j in range(x+1) :
          if i==0 and j==0 :
            f.write("데이터"+',')
          elif i == 0 :
            f.write(str(j)+"열"+',')
          elif j==0 :
            f.write(str(i)+"행"+',')
          else :
            num = str(random.randint(int(p),int(q)))
            f.write(num)
            f.write(',')
        f.write('\n')

#데이터 정제
def listdata(_files) :

  with open(_files+'.csv','r',encoding='utf-8-sig') as f :
    f.seek(0)
    raw_datas = f.readlines()
    fix_datas=[]
    for i in range(len(raw_datas)) :
      fix_data=[]
      raw_data = raw_datas[i]
      z=3
      if i==0 :
        continue
      else :  #i가 1이상일때
        for j in range(len(raw_data)) :
          if j<3 :
            continue
          else : #j가 3부터 시작
            if raw_data[j] == ',' and '\n' :
              fix_data.append(int(raw_data[z:j]))
              z=j+1
      fix_datas.append(fix_data)
    print(fix_datas)
  return fix_datas

#편차
def wtf() :
  average=aver()
  new_list=[]
  for i in range(len(filelist)): 
    new_list.append(list(map(lambda x : round(x-average,3) ,filelist[i])))
  return new_list

#표준편차
def fixwtf() :
  p=wtf()
  new_list=[]
  for i in range(len(p)): 
    new_list.append(list(map(lambda x : (x*x)**0.5 ,p[i])))
  return new_list

#전체평균
def aver() :
  allsum=0
  counter=0
  for i in range(len(filelist)):
    for j in range(len(filelist[i])):
      allsum+=filelist[i][j]
      counter+=1
  return round((allsum/counter),3)

#겹치는 요소를 dictionary에 저장, 누적분포 및 요소당 갯수
def dict_list(_files) :
  fl = {}
  fl = set()
  
  for i in range(len(filelist)) :
    for j in range(len(filelist[i])):
      fl.add(filelist[i][j])
  print(fl)
  fll=list(fl)
  print(fll)
  dict_final = {}
  with open(_files + '.csv','a+',encoding='utf-8-sig') as f :
    f.write('\n'+"누적분포"+',')
    for k in range(len(fll)) :
      counter=0
      allcounter = 0
      for i in range(len(filelist)):
        for j in range(len(filelist[i])):
          allcounter+=1
          if fll[k] == filelist[i][j] :
            counter += 1
      temp_dict={fll[k]:counter}
      percent_dict = {fll[k]:counter/allcounter}
      dict_final.update(percent_dict)
      f.write(str(temp_dict)+',')
  return dict_final

#각 열의 평균
def peraver(_files) :
  
  
  for i in range(len(filelist)) :
    counter=0
    allsum=0
    for j in range(len(filelist[i])):
      allsum+=filelist[j][i]
      counter+=1
    with open(_files + '.csv','a+',encoding='utf-8-sig') as f :
      if i == 0 :
        f.write("열의 평균"+','+str(allsum/counter)+',')
      else : 
        f.write(str(allsum/counter)+',')

#각 행의 평균
def horaver(_files) :
  
  
  for i in range(len(filelist)) :
    counter=0
    allsum=0
    for j in range(len(filelist[i])):
      allsum+=filelist[i][j]
      counter+=1
    with open(_files + '.csv','a+',encoding='utf-8-sig') as f :
      f.tell()
      if i == 0 :
        f.write('\n'+"행의 평균"+','+str(allsum/counter)+',')
      else : 
        f.write(str(allsum/counter)+',')

fc=input("만들고싶은 파일명을 입력하세요. 파일명 미입력시 파일을 만들지 않습니다. : ")
writenum(fc)
fn=input("열고싶은 파일명을 입력하세요 : ")
filelist=listdata(fn) #(x,y)크기의 list임
k=aver()#평균값
a=wtf()#편차값
b=fixwtf() #표준편차값
print(k)
print(a)
print(b)
peraver(fn)
horaver(fn)
asd = dict_list(fn)
with open(fn + '.csv','a+',encoding='utf-8-sig') as f :
  f.write('\n')
  linea=["전체평균","편차","표준편차","발생확률"]
  lineb=[k,a,b,asd]
  for i in range(len(linea)) :
    f.write(linea[i]+','+str(lineb[i])+'\n')

